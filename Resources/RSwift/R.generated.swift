//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 14 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `backArrow`.
    var backArrow: RswiftResources.ImageResource { .init(name: "backArrow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `clear`.
    var clear: RswiftResources.ImageResource { .init(name: "clear", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `clearBackground`.
    var clearBackground: RswiftResources.ImageResource { .init(name: "clearBackground", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `clouds`.
    var clouds: RswiftResources.ImageResource { .init(name: "clouds", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `cloudyBackground`.
    var cloudyBackground: RswiftResources.ImageResource { .init(name: "cloudyBackground", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `drizzle`.
    var drizzle: RswiftResources.ImageResource { .init(name: "drizzle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `logo`.
    var logo: RswiftResources.ImageResource { .init(name: "logo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mist`.
    var mist: RswiftResources.ImageResource { .init(name: "mist", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `noEthernet`.
    var noEthernet: RswiftResources.ImageResource { .init(name: "noEthernet", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `rain`.
    var rain: RswiftResources.ImageResource { .init(name: "rain", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `rainBackground`.
    var rainBackground: RswiftResources.ImageResource { .init(name: "rainBackground", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `snow`.
    var snow: RswiftResources.ImageResource { .init(name: "snow", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `snowBackground`.
    var snowBackground: RswiftResources.ImageResource { .init(name: "snowBackground", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `thunderstorm`.
    var thunderstorm: RswiftResources.ImageResource { .init(name: "thunderstorm", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.file` struct is generated, and contains static references to 1 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `Attractions.json`.
    var attractionsJson: RswiftResources.FileResource { .init(name: "Attractions", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIImage(named: "logo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'logo' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }
  }
}